{"name": "test_invalid_counter_value[123456789]", "status": "failed", "statusDetails": {"message": "AssertionError: No wrong message\nassert False\n +  where False = <bound method Page.is_displayed of <src.PageObjects.counters_page.Counters object at 0x051D2FF0>>('//*[@id=\"wrong-value\"]')\n +    where <bound method Page.is_displayed of <src.PageObjects.counters_page.Counters object at 0x051D2FF0>> = <src.PageObjects.counters_page.Counters object at 0x051D2FF0>.is_displayed\n +    and   '//*[@id=\"wrong-value\"]' = NewValue.WRONG_VALUE_BUTTON", "trace": "counter_new_value_setup = None\ninspector_counter = <src.PageObjects.counters_page.Counters object at 0x051D2FF0>\nvalue = 123456789\n\n    @pytest.mark.parametrize('value', (-3, 123456789))\n    def test_invalid_counter_value(counter_new_value_setup,\n                                   inspector_counter, value):\n        counter = inspector_counter\n        counter.open_new_value_modal()\n        counter.set_new_value(value)\n        with allure.step(\"Wrong message displayed\"):\n>           assert counter.is_displayed(NewValue.WRONG_VALUE_BUTTON), \\\n                \"No wrong message\"\nE           AssertionError: No wrong message\nE           assert False\nE            +  where False = <bound method Page.is_displayed of <src.PageObjects.counters_page.Counters object at 0x051D2FF0>>('//*[@id=\"wrong-value\"]')\nE            +    where <bound method Page.is_displayed of <src.PageObjects.counters_page.Counters object at 0x051D2FF0>> = <src.PageObjects.counters_page.Counters object at 0x051D2FF0>.is_displayed\nE            +    and   '//*[@id=\"wrong-value\"]' = NewValue.WRONG_VALUE_BUTTON\n\ntests\\test_inspector\\test_counter_value.py:32: AssertionError"}, "steps": [{"name": "Wrong message displayed", "status": "failed", "statusDetails": {"message": "AssertionError: No wrong message\nassert False\n +  where False = <bound method Page.is_displayed of <src.PageObjects.counters_page.Counters object at 0x051D2FF0>>('//*[@id=\"wrong-value\"]')\n +    where <bound method Page.is_displayed of <src.PageObjects.counters_page.Counters object at 0x051D2FF0>> = <src.PageObjects.counters_page.Counters object at 0x051D2FF0>.is_displayed\n +    and   '//*[@id=\"wrong-value\"]' = NewValue.WRONG_VALUE_BUTTON\n", "trace": "  File \"C:\\курсова\\EasyPayTeamTwo\\tests\\test_inspector\\test_counter_value.py\", line 32, in test_invalid_counter_value\n    assert counter.is_displayed(NewValue.WRONG_VALUE_BUTTON), \\\n"}, "start": 1555702966829, "stop": 1555702966859}], "attachments": [{"name": "log", "source": "cfea2487-07c1-4b03-82f6-404c1730d793-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "69b08bc5-9e92-44e1-b4db-7a9c04bb4f71-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "8c4ed208-82eb-41fb-9644-70acc4feacb7-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "value", "value": "123456789"}], "start": 1555702966082, "stop": 1555702966859, "uuid": "ba1eabfc-ca48-4f57-812b-bdafb3851fe3", "historyId": "f94e7dfaaf8fd4516c66cd17b49887b6", "fullName": "tests.test_inspector.test_counter_value#test_invalid_counter_value[123456789]", "labels": [{"name": "parentSuite", "value": "tests.test_inspector"}, {"name": "suite", "value": "test_counter_value"}, {"name": "host", "value": "DESKTOP-0OJCNQL"}, {"name": "thread", "value": "5036-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_inspector.test_counter_value"}]}